// <auto-generated />
using CarparkInfo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarparkInfo.Migrations
{
    [DbContext(typeof(CarparkInfoContext))]
    partial class CarparkInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3");

            modelBuilder.Entity("CarparkInfo.CarparkInfo", b =>
                {
                    b.Property<string>("CarparkNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("CarparkBasement")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CarparkDecks")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarparkType")
                        .HasColumnType("TEXT");

                    b.Property<string>("FreeParking")
                        .HasColumnType("TEXT");

                    b.Property<float?>("GantryHeight")
                        .HasColumnType("REAL");

                    b.Property<string>("NightParking")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortTermParking")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeOfParkingSystem")
                        .HasColumnType("TEXT");

                    b.Property<float?>("XCoordinate")
                        .HasColumnType("REAL");

                    b.Property<float?>("YCoordinate")
                        .HasColumnType("REAL");

                    b.HasKey("CarparkNumber");

                    b.ToTable("CarparkInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
